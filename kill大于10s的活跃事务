# 检测活跃事务id,如有事务持续5s以上未结束.则发送警报
import json
import time
import urllib.request

import MySQLdb


def send_dingding(data_Content):
    # 1、构建url
    url = "xxxxxxx"  # url为机器人的webhook

    # 2、构建一下请求头部
    header = {
        "Content-Type": "application/json",
        "Charset": "UTF-8"
    }
    # 3、构建请求数据
    data = {
        "msgtype": "text",
        "text": {
            "content": data_Content
        },
        "at": {
            "atMobiles": [
                "xxxxxxx",
            ],
            "isAtAll": False  # @全体成员（在此可设置@特定某人）
        }
    }

    # 4、对请求的数据进行json封装
    sendData = json.dumps(data)  # 将字典类型数据转化为json格式
    sendData = sendData.encode("utf-8")  # python3的Request要求data为byte类型

    # 5、发送请求
    request = urllib.request.Request(url=url, data=sendData, headers=header)
    #
    # 6、将请求发回的数据构建成为文件格式

    opener = urllib.request.urlopen(request)
    # 7、打印返回的结果
    # print(opener.read())


db = MySQLdb.connect("xxxxxxx", "xxxxxxx", "xxxxxxx",
                     "information_schema",
                     charset='utf8')
while True:
    try:
        cursor = db.cursor()
        cursor.execute(
            "select a.trx_started,a.trx_mysql_thread_id from INNODB_TRX a ,PROCESSLIST b where a.trx_mysql_thread_id=b.id and b.DB='zhwdb';")
        if cursor.rowcount < 1:
            print("没有活跃事务")
        else:
            data_trx = cursor.fetchall()
            for i in data_trx:
                data_trx_trx_started = i[0]
                data_trx_trx_mysql_thread_id = i[1]
                # print(data_trx_trx_started, data_trx_trx_mysql_thread_id)
                #print(time.time(), time.mktime(time.strptime(str(data_trx_trx_started), "%Y-%m-%d %H:%M:%S")))
                # print(time.time() - time.mktime(time.strptime(str(data_trx_trx_started), "%Y-%m-%d %H:%M:%S")))
                # time.sleep(3)
                if time.time() - time.mktime(time.strptime(str(data_trx_trx_started), "%Y-%m-%d %H:%M:%S")) > 10:
                    cursor.execute("kill connection {} ;".format(data_trx_trx_mysql_thread_id))
                else:
                    send_dingding("有活跃事务,但不大于10s")
                    continue
        time.sleep(1)
        cursor.close()
    except:
        continue
db.close()
